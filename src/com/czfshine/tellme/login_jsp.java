/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M11
 * Generated at: 2016-11-11 01:45:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package com.czfshine.tellme;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"./js/jquery-2.0.0.min.js\"></script>\r\n");
      out.write("<script src=\"./js/jquery-ui.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function ajaxSubmit(frm, fn) {\r\n");
      out.write("    var dataPara = getFormJson(frm);\r\n");
      out.write("    //console.log(frm);\r\n");
      out.write("    $.ajax({\r\n");
      out.write("        url: frm.action,\r\n");
      out.write("        type: frm.method,\r\n");
      out.write("        data: dataPara,\r\n");
      out.write("        success: fn\r\n");
      out.write("    });\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function getFormJson(frm) {\r\n");
      out.write("    var o = {};\r\n");
      out.write("    var a = $(frm).serializeArray();\r\n");
      out.write("    $.each(a, function () {\r\n");
      out.write("        if (o[this.name] !== undefined) {\r\n");
      out.write("            if (!o[this.name].push) {\r\n");
      out.write("                o[this.name] = [o[this.name]];\r\n");
      out.write("            }\r\n");
      out.write("            o[this.name].push(this.value || '');\r\n");
      out.write("        } else {\r\n");
      out.write("            o[this.name] = this.value || '';\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    return o;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("    $('.form-horizontal').bind('submit', function(event){\r\n");
      out.write("    \tevent.preventDefault();\r\n");
      out.write("    \t//console.log(event.type);\r\n");
      out.write("        ajaxSubmit(this, function(data){\r\n");
      out.write("        \t\r\n");
      out.write("        \tvar json = eval('(' + data + ')');\r\n");
      out.write("        \tif(json.error==3){\r\n");
      out.write("        \t\twindow.location.href=json.url;\r\n");
      out.write("        \t}\r\n");
      out.write("        \tif(json.error==4){\r\n");
      out.write("        \t\talert(\"瀵嗙爜閿欒\")\r\n");
      out.write("        \t}\r\n");
      out.write("        \tif(json.error==0){\r\n");
      out.write("        \t\talert(\"娉ㄥ唽鎴愬姛锛岃鐧诲綍\")\r\n");
      out.write("        \t}\r\n");
      out.write("        \t\r\n");
      out.write("        });\r\n");
      out.write("        return false;\r\n");
      out.write("    });\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<title>鐧诲綍</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t<div class=\"row-fluid\">\r\n");
      out.write("\t\t\t<div class=\"span12\">\r\n");
      out.write("\t\t\t\t<h3>璇风櫥褰�:</h3>\r\n");
      out.write("\t\t\t\t<form class=\"form-horizontal\" method=\"post\" action=\"./user.jsp\">\r\n");
      out.write("\t\t\t\t\t<div class=\"control-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"control-label\" for=\"inputEmail\">鐢ㄦ埛鍚�</label>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"controls\">\r\n");
      out.write("\t\t\t\t\t\t\t<input id=\"inputEmail\" type=\"text\"  name=\"username\" />\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"control-group\">\r\n");
      out.write("\t\t\t\t\t\t<label class=\"control-label\" for=\"inputPassword\">瀵嗙爜</label>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"controls\">\r\n");
      out.write("\t\t\t\t\t\t\t<input id=\"inputPassword\" type=\"password\" name=\"password\" />\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<input class=\"hide input-medium search-query\"\r\n");
      out.write("\t\t\t\t\t\ttype=\"text\" value=\"1\" name=\"p\" />\r\n");
      out.write("\t\t\t\t\t<div class=\"control-group\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"controls\">\r\n");
      out.write("\t\t\t\t\t\t\t<label class=\"checkbox\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"checkbox\" />\r\n");
      out.write("\t\t\t\t\t\t\t\t璁颁綇鎴戠殑鍚嶅瓧</label>\r\n");
      out.write("\t\t\t\t\t\t\t<button type=\"login\" class=\"btn\">鐧诲綍鎴栨敞鍐�</button>\r\n");
      out.write("\t\t\t\t\t\t\t<!--<button type=\"signin\" class=\"btn\" formaction=\"./user.jsp\">鐧婚檰</button>-->\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
